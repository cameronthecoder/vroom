/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type ArrayType<T> = ArrayTypeImpl<T> extends (infer U)[]
  ? U[]
  : ArrayTypeImpl<T>;

export type ArrayTypeImpl<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S[], I[], U[]>
  : T[];

export type ClaimantRole = "ADJUSTER" | "CLAIMANT" | "OTHER" | "POLICE_OFFICER" | "WITNESS";

export type ClaimStatus = "CLOSED" | "DENIED" | "IN_REVIEW" | "OPEN" | "SETTLED";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type PolicyPartyRole = "ADDITIONAL_INSURED" | "BENEFICIARY" | "CONTACT" | "DRIVER" | "EXCLUDED" | "NAMED_INSURED";

export type PolicyStatus = "ACTIVE" | "CANCELLED" | "INACTIVE" | "PENDING";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type UserRoles = "ADMIN" | "AGENT" | "CUSTOMER";

export type VehiclePartyRole = "ADDITIONAL_DRIVER" | "CONTACT" | "EXCLUDED_DRIVER" | "LESSEE" | "LESSOR" | "LIENHOLDER" | "OWNER" | "PRIMARY_DRIVER";

export type VehicleUse = "COMMERCIAL" | "FARM" | "PERSONAL" | "RECREATIONAL";

export interface ClaimParty {
  claim_id: string | null;
  email: string | null;
  id: string;
  name: string | null;
  party_type: ClaimantRole;
  person_id: string | null;
  phone: string | null;
}

export interface Claims {
  amount: Numeric;
  coverage_snapshot: Json;
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  incident_at: Timestamp;
  policy_id: string;
  reported_at: Generated<Timestamp>;
  status: Generated<ClaimStatus>;
  updated_at: Generated<Timestamp>;
}

export interface ClaimVehicle {
  claim_id: string;
  vehicle_id: string;
}

export interface CoverageSelection {
  amount_cents: Int8 | null;
  coverage_code: string;
  effective_at: Timestamp;
  expires_at: Timestamp;
  id: Generated<string>;
  numeric_value: Numeric | null;
  policy_id: string;
  vehicle_id: string | null;
}

export interface CoverageTypes {
  code: string;
  description: string | null;
  name: string;
  scope: string;
  unit: string;
}

export interface Organizations {
  created_at: Generated<Timestamp>;
  legal_name: string;
  party_id: string;
  tax_id: string | null;
  updated_at: Generated<Timestamp>;
  user_id: string | null;
}

export interface Parties {
  created_at: Generated<Timestamp>;
  display_name: string;
  id: Generated<string>;
  name: string;
}

export interface People {
  created_at: Generated<Timestamp>;
  first_name: string;
  last_name: string;
  license_number: string | null;
  license_state: string;
  party_id: string;
  phone: string | null;
  updated_at: Generated<Timestamp>;
  user_id: string | null;
}

export interface Policies {
  created_at: Generated<Timestamp>;
  currency: Generated<string>;
  effective_at: Timestamp;
  expires_at: Timestamp;
  id: Generated<string>;
  policy_number: Generated<Int8 | null>;
  state: string;
  status: Generated<PolicyStatus>;
  updated_at: Generated<Timestamp>;
}

export interface PolicyParties {
  effective_at: Timestamp;
  expires_at: Timestamp;
  party_id: string;
  policy_id: string;
  role: PolicyPartyRole;
}

export interface Users {
  created_at: Generated<Timestamp>;
  email: string;
  first_name: string;
  id: Generated<string>;
  last_name: string;
  password_hash: string;
  roles: Generated<ArrayType<UserRoles>>;
  updated_at: Generated<Timestamp>;
}

export interface VehicleParties {
  effective_at: Timestamp;
  expires_at: Timestamp;
  party_id: string;
  role: VehiclePartyRole;
  vehicle_id: string;
}

export interface Vehicles {
  created_at: Generated<Timestamp>;
  garaging_address: Json;
  id: Generated<string>;
  make: string;
  model: string;
  policy_id: string;
  primary_use: VehicleUse;
  updated_at: Generated<Timestamp>;
  vin: string;
  year: number;
}

export interface DB {
  claim_party: ClaimParty;
  claim_vehicle: ClaimVehicle;
  claims: Claims;
  coverage_selection: CoverageSelection;
  coverage_types: CoverageTypes;
  organizations: Organizations;
  parties: Parties;
  people: People;
  policies: Policies;
  policy_parties: PolicyParties;
  users: Users;
  vehicle_parties: VehicleParties;
  vehicles: Vehicles;
}
